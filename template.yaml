AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sftp-lambda

Parameters:
  BucketName:
    Type: String
    Description: Name of the bucket to write files to.
  SftpHost: 
    Type: String
    Description: The host to connect to.
  SftpUser:
    Type: String
    Description: The SFTP username to connect with.
  SftpPassword:
    Type: String
    NoEcho: True
    Description: The SftpPassword. This will be stored in Secrets Manager.
  SftpPrivateKeyAuth:
    Type: String
    Description: Set to True if the password is a private key.
    Default: 'False'
    AllowedValues:
      - 'True'
      - 'False'
  #FilesListJSON: 
   # Type: String
   #  Description: "JSON formatted list of files. Example: [{'SourceFile': '/path/files/fileprefix-*.txt', 'TargetPath': '/destination/folder' }, {'SourceFile': '/path/otherpath/*', 'TargetPath': '/destination/folder2' }]"
  VPC: 
    Description: The VPC that the Lambda will be placed into
    Type: AWS::EC2::VPC::Id   
  Subnets:
    Description: The subnet lambda will use.
    Type: List<AWS::EC2::Subnet::Id>
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 900

Resources:
  SftpLambda:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: sftp-lambda/
      Handler: app.lambda_handler
      Runtime: python3.7
      MemorySize: 1024
      Events:
        SFTPSchedule:
          Type: Schedule 
          Properties:
            Schedule: cron(10 * * * ? *) # Run at every 10 min (Cloudwatch uses GMT)
            Description: Runs sftp-lambda handler daily
            Enabled: True
            Input:  !Sub | 
              {
                  "SftpHost": "${SftpHost}",
                  "SftpUser": "${SftpUser}",
                  "SftpSecretArn": "${SftpPasswordSecret}",
                  "SftpPrivateKeyAuth": "${SftpPrivateKeyAuth}",
                  "TargetBucketName": "${BucketName}"
              }
  

      VpcConfig:
        SubnetIds: !Ref Subnets
        SecurityGroupIds: 
          - !Ref SftpLambdaSecurityGroup
      Policies:
        - S3WritePolicy: # Details: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html#s3-write-policy 
            BucketName: !Ref BucketName
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref SftpPasswordSecret

  SftpPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Password for SFTP
      SecretString: !Ref SftpPassword
      
  SftpLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for SFTP Lambda
      VpcId: !Ref 'VPC'      
Outputs:
  SftpLambdaArn:
    Description: "Arn for the SFTP Lambda"
    Value: !GetAtt SftpLambda.Arn

